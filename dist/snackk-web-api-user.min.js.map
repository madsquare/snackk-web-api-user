{"version":3,"file":"snackk-web-api-user.min.js","sources":["../almond.js","user.js"],"names":["this","requirejs","require","define","undef","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","concat","splice","join","makeRequire","relName","forceSync","req","apply","aps","call","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","hasOwnProperty","args","defining","main","Error","makeMap","prefix","plugin","index","indexOf","f","n","p","makeConfig","deps","callback","usingExports","cjsModule","ret","id","uri","exports","load","setTimeout","cfg","amd","jQuery","_","User","_ERROR_CODE","_txt","_user","DUPLICATED","INVALID","UN_KNOWN","server","init","setUser","user","console","error","getUser","registerUser","options","request","TAG","get","assign","data","type","addProvider","sns","token","tag","provider","replace","us_no","loadUser","loadDefaultProfile","profileDefault","updateUser","unit","log","updateProfile","fileInput","profile","dataType","updatePassword","oldPasswd","newPasswd","nonce","oldPasswdObj","userObj","passwd","isPasswdEdit","new_passwd","aasign","deleteUser","deleteProvider","deleteProfile","sendResetPassword","email","password","sendEmail","emailPost","validateEmail","filter","xhr","match","abort","success","_this","res","er","code","complete"],"mappings":"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":["/**\n * almond 0.1.2 Copyright (c) 2011, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        aps = [].slice,\n        main, req;\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {},\n            nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part;\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; (part = name[i]); i++) {\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            return true;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (waiting.hasOwnProperty(name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!defined.hasOwnProperty(name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    function makeMap(name, relName) {\n        var prefix, plugin,\n            index = name.indexOf('!');\n\n        if (index !== -1) {\n            prefix = normalize(name.slice(0, index), relName);\n            name = name.slice(index + 1);\n            plugin = callDep(prefix);\n\n            //Normalize according\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            p: plugin\n        };\n    }\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    main = function (name, deps, callback, relName) {\n        var args = [],\n            usingExports,\n            cjsModule, depName, ret, map, i;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i++) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = makeRequire(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = defined[name] = {};\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = {\n                        id: name,\n                        uri: '',\n                        exports: defined[name],\n                        config: makeConfig(name)\n                    };\n                } else if (defined.hasOwnProperty(depName) || waiting.hasOwnProperty(depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else if (!defining[depName]) {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                    cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync) {\n        if (typeof deps === \"string\") {\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 15);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        return req;\n    };\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        waiting[name] = [name, deps, callback];\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\ndefine(\"../almond\", function(){});\n\n","(function() {\n  define('user',['lodash'], function(_) {\n    var User, _ERROR_CODE, _txt, _user;\n    _user = null;\n    _txt = '';\n    _ERROR_CODE = {\n      DUPLICATED: 'error_duplicated',\n      INVALID: 'error_invalid',\n      UN_KNOWN: 'error_unknown'\n    };\n    User = {\n      server: null,\n      init: function(server) {\n        return this.server = server;\n      },\n\n      /*\n       * set user\n       * @param {User} user  :user object\n       */\n      setUser: function(user) {\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        return _user = user;\n      },\n\n      /*\n       * return user\n       * @return {User}\n       */\n      getUser: function() {\n        return _user;\n      },\n\n      /*\n       * 회원가입\n       * @param  {User}   user     : user object\n       * @param  {Function} callback \n       * @param  {Object} options  \n       * @return {ajax}\n       */\n      registerUser: function(user, callback, options) {\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        if (!options) {\n          options = {};\n        }\n        return this.server.request(this.server.TAG.user.get, _.assign({\n          'data': _.assign({\n            'user': user\n          }, options),\n          'type': 'POST'\n        }, callback));\n      },\n\n      /*\n       * 로그인 provider추가.\n       * @param {String}   sns      : sns 종류.\n       * @param {String}   token    : sns access token\n       * @param {Function} callback\n       */\n      addProvider: function(sns, token, callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.provider.replace(':us_no', _user.us_no).replace(':provider', sns);\n        return this.server.request(tag, _.assign({\n          'type': 'POST',\n          'data': {\n            'token': token\n          }\n        }, callback));\n      },\n\n      /*\n       * 내 정보 반환\n       * @param  {Object}   filter   : http://api.snackk.tv/api/user.html#GET /user\n       * @param  {Function} callback \n       * @param  {Object}   options  \n       * @return {ajax}\n       */\n      loadUser: function(options, callback) {\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        if (!options) {\n          options = {};\n        }\n        return this.server.request(this.server.TAG.user.get, _.assign({\n          'data': options\n        }, callback));\n      },\n\n      /*\n       * 해당 유저의 디폴트 이미지 로드.\n       * @param  {Function} callback \n       * @return {ajax}\n       */\n      loadDefaultProfile: function(callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.profileDefault.replace(':us_no', _user.us_no);\n        return this.server.request(tag, callback);\n      },\n\n      /*\n       * 내 정보 수정.\n       * 프로필은 제외됨.\n       * @param  {User}     user     \n       * @param  {Function} callback \n       * @param  {Object}   options  \n       * @return {ajax}\n       */\n      updateUser: function(user, callback, options) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        if (!_user) {\n          console.log('updateUser] user object is empty.');\n          return;\n        }\n        if (!options) {\n          options = {};\n        }\n        tag = this.server.TAG.user.unit.replace(':us_no', _user.us_no);\n        return this.server.request(tag, _.assign({\n          'type': 'PUT',\n          'data': _.assign({\n            'user': user\n          }, options)\n        }, callback));\n      },\n\n      /*\n       * 프로필 사진 수정.\n       * @param  {File}     fileInput [description]\n       * @param  {Function} callback  [description]\n       * @return {[type]}             [description]\n       */\n      updateProfile: function(fileInput, callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.profile.replace(':us_no', _user.us_no);\n        return this.server.request(tag, _.assign({\n          'fileInput': fileInput,\n          'dataType': 'iframe json'\n        }, callback));\n      },\n\n      /*\n       * 비밀번호 변경.\n       * @param  {String}   oldPasswd : 이전 비밀번호 입력.(optional)\n       * @param  {String}   newPasswd : 새 비밀번호.\n       * @param  {Function} callback \n       * @param  {Object}   options  \n       * @return {ajax}\n       */\n      updatePassword: function(oldPasswd, newPasswd, callback, options) {\n        var nonce, oldPasswdObj, tag, userObj;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        if (oldPasswd) {\n          oldPasswdObj = {\n            'passwd': oldPasswd\n          };\n          nonce = {\n            'nonce': {\n              'isPasswdEdit': 1\n            }\n          };\n        } else {\n          oldPasswdObj = {};\n          nonce = {};\n        }\n        if (!options) {\n          options = {};\n        }\n        userObj = _.assign({\n          'new_passwd': newPasswd\n        }, oldPasswdObj);\n        tag = this.server.TAG.user.unit.replace(':us_no', _user.us_no);\n        return this.server.request(tag, _.aasign({\n          'type': 'PUT',\n          'data': _.assign({\n            'user': userObj\n          }, nonce, options)\n        }, callback));\n      },\n\n      /*\n       * 회원탈퇴.\n       * @param  {Function} callback\n       * @return {ajax}\n       */\n      deleteUser: function(callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        if (!_user) {\n          console.log('deleteUser] user object is empty.');\n          return;\n        }\n        tag = this.server.TAG.user.unit.replace(':us_no', _user.us_no);\n        return this.server.request(tag, _.assign({\n          'type': 'DELETE'\n        }, callback));\n      },\n\n      /*\n       * login provider 삭제.\n       * @param  {String}   sns      : 삭제할 sns 종류.\n       * @param  {Function} callback \n       * @return {ajax}\n       */\n      deleteProvider: function(sns, callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.provider.replace(':us_no', _user.us_no).replace(':provider', sns);\n        return this.server.request(tag, _.assign({\n          'type': 'DELETE'\n        }, callback));\n      },\n\n      /*\n       * 프로필 이미지 삭제.\n       * @param  {Function} callback \n       * @return {ajax}\n       */\n      deleteProfile: function(callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.profile.replace(':us_no', _user.us_no);\n        return this.server.request(tag, _.assign({\n          'type': 'DELETE'\n        }, callback));\n      },\n\n      /*\n       * 비밀번호 리셋 메일 발송.\n       * @param  {email}   email\n       * @param  {Function} callback\n       */\n      sendResetPassword: function(email, callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.password;\n        return this.server.request(tag, _.assign({\n          'type': 'POST',\n          'data': {\n            'email': email\n          }\n        }, callback));\n      },\n\n      /*\n       * 인증 메일 발송.\n       * @param  {Function} callback \n       * @return {ajax}\n       */\n      sendEmail: function(callback) {\n        var tag;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        tag = this.server.TAG.user.emailPost;\n        return this.server.request(tag, callback);\n      },\n\n      /*\n       * email 중복 및 유효성 검사.\n       * @param  {String}   email    \n       * @param  {Function} callback\n       * @return {ajax}\n       */\n      validateEmail: function(email, callback) {\n        var filter, xhr;\n        if (!this.server) {\n          console.error('user-module] not initialized server.');\n          return;\n        }\n        if (!callback || !email) {\n          console.error('validateEmail] email or callback is not defined.');\n          return;\n        }\n        if (!email.match(/^(([a-zA-Z]|[0-9])|([-]|[_]|[.]))+[@](([a-zA-Z0-9])|([-])){2,63}[.](([a-zA-Z0-9]){2,63})+$/gi)) {\n          callback('ERROR', _ERROR_CODE.INVALID);\n        }\n        xhr && xhr.abort();\n        filter = {\n          'filter': {\n            'email': email\n          }\n        };\n        return xhr = this.loadUser(filter, {\n          success: (function(_this) {\n            return function(res) {\n              return callback('ERROR', _ERROR_CODE.DUPLICATED);\n            };\n          })(this),\n          error: (function(_this) {\n            return function(er) {\n              if (er.code === 404) {\n                return callback('SUCCESS');\n              } else {\n                return callback('ERROR', _ERROR_CODE.UN_KNOWN);\n              }\n            };\n          })(this),\n          complete: (function(_this) {\n            return function() {\n              return xhr = null;\n            };\n          })(this)\n        });\n      }\n    };\n    return User;\n  });\n\n}).call(this);\n\n//# sourceMappingURL=user.js.map\n;\n"]}